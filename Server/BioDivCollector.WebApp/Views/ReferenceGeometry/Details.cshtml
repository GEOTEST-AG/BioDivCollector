@model BioDivCollector.WebApp.Controllers.GeometrieViewModel

@using FormFactory
@using FormFactory.Attributes
@using FormFactory.AspMvc

@{
    Layout = "_LayoutSidebar";
    ViewData["Title"] = Model.Geometry.GeometryName;
}

<svg display="none" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1140" height="20" viewBox="0 0 1140 20">	
    <defs>	
      <g id="ico-close">	
        <polygon points="19.7,11.7 18.3,10.3 15,13.6 11.7,10.3 10.3,11.7 13.6,15 10.3,18.3 11.7,19.7 15,16.4 18.3,19.7 19.7,18.3	
        16.4,15 "/>	
      </g>	
    </defs>	
</svg>	
<style>	
.image-remover {	
    position: relative;	
    overflow: hidden;	
}	
.image-remover svg {	
  position: absolute;	
  top: -30px;	
  left: 0;	
  width: 20px;	
  height: 20px;	
  background: rgba(17, 17, 17, 0.4);	
  fill: white;	
  transition: top ease 200ms;	
}	
.image-remover:hover svg {	
  top: 0;	
  display: block;	
}	
.image-remover:hover svg:hover {	
  cursor: pointer;	
  background: red;	
}	
.image-remover:hover svg:active {	
  background: #cc0000;	
}	
.dropzone	
{	
    min-height: 20px;	
    border: 1px solid rgba(0,0,0,.3);	
    background: #fff;	
    padding: 10px 10px;	
    margin-top: 20px;	
    border-radius: 25px;	
}	
.dropzone .dz-message .dz-button	
{	
    text-align:center;	
}	
</style>

<script>
     // add new Record
    function addRecord() {

        var selectizeControl = $select[0].selectize;

        if (Object.values(selectizeControl.options).length == 1) {


        selectizeControl.setValue(Object.values(selectizeControl.options)[0]["FormId"], true);

        }
            modalokclick = false;
            $('#formSelectorModal').modal('show');
            $('#formSelectorModal').on('hide.bs.modal', function (event) {
                if (modalokclick) {
                    $('#BeobachtungContent').html('');
                    $('#loading-spinner').show();
                    $.ajax(
                        {
                            url: "@Url.Action("AddToGeometry","Records", new { GeometryId = Model.Geometry.GeometryId})&ProjectId=" + projectId + "&GroupId=" + groupId + "&FormId=" + $('#form-select').val() + "&CopyFromLast=" + $('#hidden-copycheck').val(),
                        }).done(function () {
                            var goToInsideUrl = "@Url.Action("Details","ReferenceGeometry", new {@id = Model.Geometry.GeometryId})";
                            loadBeobachtungsURL(goToInsideUrl);
                        }
                        );
                }
                $(this).off('hide.bs.modal');
            });
        }

    function deleteRecord(recordId) {
        modalokclick = false;
        $('#deleteRecordModal').modal('show');
        $('#deleteRecordModal').on('hide.bs.modal', function (event) {
            if (modalokclick) {
                $('#BeobachtungContent').html('');
                $('#loading-spinner').show();
                $.ajax(
            {
                url: "@Url.Action("Delete","Records")/" + recordId,
            }).done(function () {
                var goToInsideUrl = "@Url.Action("Details","ReferenceGeometry", new {@id = Model.Geometry.GeometryId})";
                loadBeobachtungsURL(goToInsideUrl);
            }
            );

            }

            $(this).off('hide.bs.modal');
        });
    }

    function deleteGeometry() {
        modalokclick = false;
        $('#deleteGeometryModal').modal('show');
        $('#deleteGeometryModal').on('hide.bs.modal', function (event) {
            if (modalokclick) {
                $('#BeobachtungContent').html('');
                $('#loading-spinner').show();
                $.ajax(
                    {
                        url: "@Url.Action("Delete","ReferenceGeometry", new { @id = Model.Geometry.GeometryId })",
                    }).done(function () {
                        GeoWebGIS.reloadGeoJSON();
                        $('#loading-spinner').hide();
                    }
                    )
            }

            $(this).off('hide.bs.modal');
        });
    }

    function renameGeometry() {
        modalokclick = false;
        $('#newRenameGeometryTitle').val('@Html.Raw(Model.Geometry.GeometryName?.Replace("'","\'"))');
        $('#renameGeometryModal').modal('show');
        $('#renameGeometryModal').on('hide.bs.modal', function (event) {
            if (modalokclick) {
                $('#BeobachtungContent').html('');
                $('#loading-spinner').show();
                $.ajax(
                    {
                        url: "@Url.Action("Rename","ReferenceGeometry", new { @id = Model.Geometry.GeometryId })?newName=" + $('#newRenameGeometryTitle').val(),
                    }).done(function () {
                        GeoWebGIS.reloadGeoJSON();

                        var goToInsideUrl = "@Url.Action("Details","ReferenceGeometry", new {@id = Model.Geometry.GeometryId})";
                        loadBeobachtungsURL(goToInsideUrl);
                        $('#loading-spinner').hide();
                    }
                    )
            }

            $(this).off('hide.bs.modal');
        });
    }

    function moveRecord(recordId) {
        modalokclick = false;
        $('#moverecordid').val(recordId);

        $select = $('#togeometrie-select').selectize({
                                        initItem: true,

                                        // Need to preload, so that Selectize will go get the option
                                        preload: true,
                                        maxItems: 1,
                                        persist: false,
                                        load: function (query, callback) {
                                            //if (!query.length) return callback();
                                            $.ajax({
                                                url: '@Url.Action("GetGeometriesForProject", "ReferenceGeometry")?id=' + projectId +'&search=' + encodeURIComponent(query),
                                                type: 'GET',
                                                error: function () {
                                                    callback();
                                                },
                                                success: function (res) {
                                                    callback(res.slice(0, 10));
                                                }
                                            });
                                        },
            valueField: 'Id',
                                        labelField: 'Title',
            searchField: 'Title'
                                    });





        $('#moveRecordModal').modal('show');
        $('#moveRecordModal').on('hide.bs.modal', function (event) {
            if (modalokclick) {
                var opengeometry = $('#togeometrie-select').val();

                $('#loading-spinner').show();
                $.ajax(
                    {
                        url: "@Url.Action("Move","Records")?from=" + recordId + "&to=" + $('#togeometrie-select').val(),
                    }).done(function () {
                        GeoWebGIS.reloadGeoJSON();
                        var goToInsideUrl = "@Url.Action("Details","ReferenceGeometry")?id="+opengeometry;
                        loadBeobachtungsURL(goToInsideUrl);
                        $('#loading-spinner').hide();
                    }
                    )
            }

            $(this).off('hide.bs.modal');
        });
    }

</script>

<div class="row">
    <div class="col-sm-12 col-xl-12">
        <div class="card b-r-0">
            <div class="card-header">
                <h5>@Model.Geometry.GeometryName</h5>
                <div class="card-header-right">
                    @if ((bool)ViewData["ReadOnly"] == false)
                    {
                        <a href="javascript:renameGeometry();" class="badge badge-light" style="font-size:11px;"><i class="icofont-pencil"></i></a>
                        <a href="javascript:deleteGeometry();" class="badge badge-light" style="font-size:11px;"><i class="icofont-trash"></i></a>
                        <a href="javascript:addRecord();" class="badge badge-light" style="font-size:11px;"><i class="icofont-plus-circle"></i></a>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="form-group has-valid">



                    <label class="control-label" for="BDCGuid">Geometrie BDC GUID</label>
                    <div class="input-group">
                        <input class="form-control" readonly="" type="text" id="GeometrieId" name="GeometrieId" value="<<BDC><@Model.Geometry.GeometryId>>">
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-clipboard" data-clipboard-action="copy" data-clipboard-target="#GeometrieId"><i class="fa fa-copy" aria-hidden="true"></i></button>
                        </span>
                    </div>


                </div>

                <!-- Handle plugins -->
                @foreach (string plugin in (List<string>)ViewBag.plugins)
                {
                    <text>@await Component.InvokeAsync(plugin, new { referenceGeometry = Model.Geometry })</text>
                }

                <div id="accordionoc" class="default-according style-1">
                    @{
                        int i = 0;
                        bool first = true;

                        string showString = "";
                    }
                    @foreach (BioDivCollector.WebApp.Controllers.RecordViewModel rvm in Model.Records.OrderByDescending(m => m.Record.RecordChangeLogs.Max(cl => cl.ChangeLogId)))
                    {
                        i++;
                        if (i == 1)
                        {
                            showString = "show";
                        }
                        else
                        {
                            showString = "";
                        }
                        string background = "bg-primary";
                        string fontcolor = "txt-white";
                        if (rvm.Readonly)
                        {
                            background = "bg-light";
                            fontcolor = "";
                        }
                        var lastCl = rvm.Record.RecordChangeLogs.OrderBy(cl => cl.ChangeLogId).Last();

                        <div class="card b-r-0">
                            <div class="card-header @background">
                                <h5 class="mb-0">
                                    <button class="btn btn-link @fontcolor" data-toggle="collapse" data-target="#collapse_@i"
                                        @if (i == 1) {
                                <text> aria-expanded="true" </text>
  } else {
                                <text> aria-expanded="false" </text>
 }
                                            aria-controls="collapse_@i">
                                            <i class="icofont-list"></i>
                                        @if (rvm.Record.Form.FormFormFields.Any(m => m.FormField.UseInRecordTitle == true))
                                        {
                                            string newTitle = "";
                                            foreach (BioDivCollector.DB.Models.Domain.FormFormField fff in rvm.Record.Form.FormFormFields.Where(m => m.FormField.UseInRecordTitle == true))
                                            {
                                                if ((fff.FormField.FieldTypeId == BioDivCollector.DB.Models.Domain.FieldTypeEnum.Text) || (fff.FormField.FieldTypeId == BioDivCollector.DB.Models.Domain.FieldTypeEnum.Choice))
                                                {
                                                    if (rvm.Record.TextData.Any(m => m.FormFieldId == fff.FormField.FormFieldId))
                                                    {
                                                        newTitle += rvm.Record.TextData.Where(m => m.FormFieldId == fff.FormField.FormFieldId).First().Value + ", ";
                                                    }
                                                }
                                                else if ((fff.FormField.FieldTypeId == BioDivCollector.DB.Models.Domain.FieldTypeEnum.Number))
                                                {
                                                    if (rvm.Record.NumericData.Any(m => m.FormFieldId == fff.FormField.FormFieldId))
                                                    {
                                                        newTitle += rvm.Record.NumericData.Where(m => m.FormFieldId == fff.FormField.FormFieldId).First().Value.ToString() + ", ";
                                                    }
                                                }
                                            }
                                            if (newTitle.Length > 1) newTitle = newTitle.Substring(0, newTitle.Length - 2);
                                            <text>@newTitle (@rvm.Record.Form.Title)</text>
                                        }
                                        else
                                        {
                                            @rvm.Record.Form.Title
                                        }
                                        </button>
                                </h5>
                            </div>
                            <div id="collapse_@i" class="collapse @showString" aria-labelledby="collapseicon" data-parent="#accordionoc" style="">
                                <div class="card-body">
                                    <form asp-action="Save" asp-controller="Records" id="Form_@rvm.Record.RecordId">
                                        @rvm.DynamicForm.ToArray().Render(Html)
                                        <div class="card-footer card-subfooter">
                                            @if (!rvm.Readonly)
                                            {
                                                <button type="submit" class="btn btn-primary" style="width:auto;"><i class="icofont-save"></i></button>
                                                <button type="button" onclick="deleteRecord('@rvm.Record.RecordId')" class="btn btn-danger" style="width:auto;"><i class="icofont-ui-delete"></i></button>
                                                <button type="button" onclick="moveRecord('@rvm.Record.RecordId')" class="btn btn-primary" style="width:auto;"><i class="icofont-bubble-right" title="Beobachtung verschieben"></i></button>
                                            }
                                            <p style="font-size:9px;">
                                                Erfasst in Gruppe @rvm.Group.GroupName<br />
                                                <span>Letzte Änderung: @lastCl.ChangeLog.ChangeDate.ToLocalTime().ToString("dd.MM.yy") von @lastCl.ChangeLog.User.FirstName @lastCl.ChangeLog.User.Name</span>
                                            </p>

                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <script>

                            function deleteImage(e, imageId) {
                                                        e.preventDefault();
                                                        e.stopPropagation();
                                                        modalokclick = false;
                                                            $('#deleteImageModal').modal('show');
                                                            $('#deleteImageModal').on('hide.bs.modal', function (event) {
                                                                if (modalokclick) {
                                                                    $.ajax({
                                                                        type: "GET",
                                                                        url: "@Url.Action("Delete", "Binary")/"+imageId,
                                                                        success: function (data) {
                                                                            if (data == "OK") {
                                                                                $hidden = $('#BeobachtungUrl');
                                                                                $hidden.trigger("click");
                                                                            }
                                                                        }
                                                                        });
                                                                }

                                                                $(this).off('hide.bs.modal');
                                                            });

                                                            return false;
                                                    }

                                $(document).ready(function () {
                                                            $('#Form_@rvm.Record.RecordId select').each(function () {
                                                                $(this).selectize();
                                                            });

                                                        });

                            $('#Form_@rvm.Record.RecordId').submit(function (e) {

                                e.preventDefault(); // avoid to execute the actual submit of the form.

                                var form = $(this);
                                var url = form.attr('action');

                                $.ajax({
                                    type: "POST",
                                    url: url,
                                    data: form.serialize(), // serializes the form's elements.
                                    success: function (data) {
                                        if (data == "OK") {
                                            $.notify({
                                                title: 'Speichern erfolgreich',
                                                message: 'Der Eintrag wurde erfolgreich gespeichert.'
                                            },
                                                {
                                                    type: 'primary',
                                                    allow_dismiss: false,
                                                    newest_on_top: false,
                                                    mouse_over: false,
                                                    showProgressbar: false,
                                                    spacing: 10,
                                                    timer: 2000,
                                                    placement: {
                                                        from: 'top',
                                                        align: 'right'
                                                    },
                                                    offset: {
                                                        x: 30,
                                                        y: 100
                                                    },
                                                    delay: 1000,
                                                    z_index: 10000,
                                                    animate: {
                                                        enter: 'animated fadeInDown',
                                                        exit: 'animated bounceOutRight'
                                                    }
                                                });
                                        }
                                        else {
                                            $.notify({
                                                title: 'Es gab ein Problem',
                                                message: 'Fehler beim Speichern: ' + data
                                            },
                                                {
                                                    type: 'danger',
                                                    allow_dismiss: false,
                                                    newest_on_top: false,
                                                    mouse_over: false,
                                                    showProgressbar: false,
                                                    spacing: 10,
                                                    timer: 2000,
                                                    placement: {
                                                        from: 'top',
                                                        align: 'right'
                                                    },
                                                    offset: {
                                                        x: 30,
                                                        y: 100
                                                    },
                                                    delay: 1000,
                                                    z_index: 10000,
                                                    animate: {
                                                        enter: 'animated fadeInDown',
                                                        exit: 'animated bounceOutRight'
                                                    }
                                                });
                                        }

                                    }
                                });


                            });
                        </script>

                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

                                                        // if no record exits, directly show the add beobachtung dialog
    @if (Model.Records.Count == 0)
    {
        <text>console.log("Hallo"); addRecord();</text>
    }


                                                    });
</script>