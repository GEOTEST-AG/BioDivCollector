@using System
@using FormFactory.Attributes
@using System.Globalization
@using FormFactory

@model PropertyVm
@using System.Collections
@using FormFactory
@using FormFactory.ViewHelpers
@using System.Reflection
@if (Model.Choices != null && !Model.Readonly)
{
    ObjectChoices[] choices = Html.Choices(Model);
    if (choices.Length > 1)
    {
        <div class="ff-choices-area">
            @{
                var selectedIndex = FormFactory.ViewHelpers.Object.GetSelectedIndex(choices);


                var useRadio = FormFactory.ViewHelpers.Object.UseRadio(Model);

                if (!useRadio)
                {

                    <div>
                        <select class="ff-choice-picker form-control" @Model.Disabled()>
                            @for (int i = 0; i < choices.Length; i++)
                            {
                                var selctedAtt = ((i == selectedIndex) ? "selected=\"selected\"" : "");
                                var text = choices[i] == null ? "None" : choices[i].name;
                                var option = $@"<option value=""{i}"" {selctedAtt}>{text}</option>";
                                @Html.Raw(option);
                            }
                        </select>
                    </div>
                }
            }
            <div class="ff-choices">
                @{
                    var radioGroupName = Guid.NewGuid().ToString();
                    for (int i = 0; i < choices.Length; i++)
                    {
                        var choice = choices[i];
                        var obj = choices[i].obj;
                        var isSelected = (i == selectedIndex);
                        var isDisabled = Model.Disabled | !isSelected;
                        <div class="ff-choice "  @Html.Raw((useRadio || isSelected) ? "" : "style='display:none'") >
                            <div class="radio">
                                <input type="radio" class="ff-choice-selector " @Html.Raw(!useRadio ? "style='display:none'" : "") name="@radioGroupName" @Html.Raw(isSelected.Attr("checked", null)) @Model.Disabled.Attr("disabled", null)/>
                                <div @Html.Raw(useRadio ? "class=\"radio-block\"" : "")>
                                    @if (useRadio)
                                    {
                                        <div class="ff-choice-name">@(obj == null ? "None" : choice.name)</div>
                                    }
                                    @foreach (var p in choice.properties)
                                    {
                                        p.Disabled |= isDisabled;
                                        @Html.Partial("FormFactory/Form.Property", p)
                                        ;
                                    }
                                </div>
                            </div>
                        </div>

                    }
                }
            </div>
        </div>
    }
    else
    {
        foreach (var choice in choices)
        {
            foreach (var p in choice.properties)
            {
                @Html.Partial("FormFactory/Form.Property", p)
            }
        }
    }
}
else
{
    var properties = FF.PropertiesFor(Model.Value);
    foreach (var p in properties)
    {
        p.Name = Model.Name == null ? p.Name : Model.Name + "." + p.Name;
        @Html.Partial("FormFactory/Form.Property", p);
    }
}
